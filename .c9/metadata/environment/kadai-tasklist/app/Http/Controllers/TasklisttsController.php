{"filter":false,"title":"TasklisttsController.php","tooltip":"/kadai-tasklist/app/Http/Controllers/TasklisttsController.php","undoManager":{"mark":5,"position":5,"stack":[[{"start":{"row":0,"column":0},"end":{"row":10,"column":0},"action":"remove","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","class TasklisttsController extends Controller","{","    //","}",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":83,"column":1},"action":"insert","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","use App\\Tasklist;","","class TasklistsController extends Controller","{","    public function index()","    {","        $tasklists = Tasklist::all();","","        return view('tasklists.index', [","            'tasklists' => $tasklists,","        ]);","    }","    ","    public function show($id)","    {","        $tasklist = Tasklist::find($id);","","        return view('tasklists.show', [","            'tasklist' => $tasklist,","        ]);","    }","    ","    public function create()","    {","        $tasklist = new Tasklist;","","        return view('tasklists.create', [","            'tasklist' => $tasklist,","        ]);","    }","    ","    public function store(Request $request)","    {","        $this->validate($request, [","            'content' => 'required|max:191',","        ]);","","        $request->user()->microposts()->create([","            'content' => $request->content,","        ]);","","        return redirect()->back();","    }","    ","     public function edit($id)","    {","        $tasklist = Tasklist::find($id);","","        return view('tasklists.edit', [","            'tasklist' => $tasklist,","        ]);","    }","    ","    public function update(Request $request, $id)","    {","         $this->validate($request, [","            'status' => 'required|max:10',","            'content' => 'required|max:191',","        ]);","        $tasklist = Tasklist::find($id);","        $tasklist->status = $request->status;","        $tasklist->content = $request->content;","        $tasklist->save();","","        return redirect('/');","    }","    ","    public function destroy($id)","    {","        $tasklist = \\App\\Micropost::find($id);","","        if (\\Auth::id() === $tasklist->user_id) {","            $tasklistt->delete();","        }","","        return redirect()->back();","    }","}"]}],[{"start":{"row":0,"column":0},"end":{"row":83,"column":1},"action":"remove","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","use App\\Tasklist;","","class TasklistsController extends Controller","{","    public function index()","    {","        $tasklists = Tasklist::all();","","        return view('tasklists.index', [","            'tasklists' => $tasklists,","        ]);","    }","    ","    public function show($id)","    {","        $tasklist = Tasklist::find($id);","","        return view('tasklists.show', [","            'tasklist' => $tasklist,","        ]);","    }","    ","    public function create()","    {","        $tasklist = new Tasklist;","","        return view('tasklists.create', [","            'tasklist' => $tasklist,","        ]);","    }","    ","    public function store(Request $request)","    {","        $this->validate($request, [","            'content' => 'required|max:191',","        ]);","","        $request->user()->microposts()->create([","            'content' => $request->content,","        ]);","","        return redirect()->back();","    }","    ","     public function edit($id)","    {","        $tasklist = Tasklist::find($id);","","        return view('tasklists.edit', [","            'tasklist' => $tasklist,","        ]);","    }","    ","    public function update(Request $request, $id)","    {","         $this->validate($request, [","            'status' => 'required|max:10',","            'content' => 'required|max:191',","        ]);","        $tasklist = Tasklist::find($id);","        $tasklist->status = $request->status;","        $tasklist->content = $request->content;","        $tasklist->save();","","        return redirect('/');","    }","    ","    public function destroy($id)","    {","        $tasklist = \\App\\Micropost::find($id);","","        if (\\Auth::id() === $tasklist->user_id) {","            $tasklistt->delete();","        }","","        return redirect()->back();","    }","}"],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":32,"column":1},"action":"insert","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","use App\\Http\\Controllers\\Controller;","","class MicropostsController extends Controller","{","    /**","     * Display a listing of the resource.","     *","     * @return \\Illuminate\\Http\\Response","     */","    public function index()","    {","        $data = [];","        if (\\Auth::check()) {","            $user = \\Auth::user();","            $microposts = $user->microposts()->orderBy('created_at', 'desc')->paginate(10);","","            $data = [","                'user' => $user,","                'microposts' => $microposts,","            ];","            $data += $this->counts($user);","            return view('users.show', $data);","        }else {","            return view('welcome');","        }","    }","}"],"id":4}],[{"start":{"row":19,"column":29},"end":{"row":19,"column":30},"action":"insert","lines":["t"],"id":5}],[{"start":{"row":19,"column":29},"end":{"row":19,"column":30},"action":"remove","lines":["t"],"id":6}],[{"start":{"row":8,"column":6},"end":{"row":8,"column":15},"action":"remove","lines":["Micropost"],"id":7},{"start":{"row":8,"column":6},"end":{"row":8,"column":14},"action":"insert","lines":["tasklist"]},{"start":{"row":20,"column":13},"end":{"row":20,"column":22},"action":"remove","lines":["micropost"]},{"start":{"row":20,"column":13},"end":{"row":20,"column":21},"action":"insert","lines":["tasklist"]},{"start":{"row":20,"column":32},"end":{"row":20,"column":41},"action":"remove","lines":["micropost"]},{"start":{"row":20,"column":32},"end":{"row":20,"column":40},"action":"insert","lines":["tasklist"]},{"start":{"row":24,"column":17},"end":{"row":24,"column":26},"action":"remove","lines":["micropost"]},{"start":{"row":24,"column":17},"end":{"row":24,"column":25},"action":"insert","lines":["tasklist"]},{"start":{"row":24,"column":32},"end":{"row":24,"column":41},"action":"remove","lines":["micropost"]},{"start":{"row":24,"column":32},"end":{"row":24,"column":40},"action":"insert","lines":["tasklist"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":20,"column":22},"end":{"row":20,"column":22},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1529293632646,"hash":"996ad36563c007e412d12c8b65b5cb7176c3a8de"}