{"filter":false,"title":"User.php","tooltip":"/monolist/app/User.php","undoManager":{"mark":3,"position":3,"stack":[[{"start":{"row":27,"column":6},"end":{"row":28,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":28,"column":0},"end":{"row":28,"column":4},"action":"insert","lines":["    "]},{"start":{"row":28,"column":4},"end":{"row":29,"column":0},"action":"insert","lines":["",""]},{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":29,"column":4},"end":{"row":77,"column":5},"action":"insert","lines":["public function items()","    {","        return $this->belongsToMany(Item::class)->withPivot('type')->withTimestamps();","    }","","    public function want_items()","    {","        return $this->items()->where('type', 'want');","    }","","    public function want($itemId)","    {","        // Is the user already \"want\"?","        $exist = $this->is_wanting($itemId);","","        if ($exist) {","            // do nothing","            return false;","        } else {","            // do \"want\"","            $this->items()->attach($itemId, ['type' => 'want']);","            return true;","        }","    }","","    public function dont_want($itemId)","    {","        // Is the user already \"want\"?","        $exist = $this->is_wanting($itemId);","","        if ($exist) {","            // remove \"want\"","            \\DB::delete(\"DELETE FROM item_user WHERE user_id = ? AND item_id = ? AND type = 'want'\", [\\Auth::id(), $itemId]);","        } else {","            // do nothing","            return false;","        }","    }","","    public function is_wanting($itemIdOrCode)","    {","        if (is_numeric($itemIdOrCode)) {","            $item_id_exists = $this->want_items()->where('item_id', $itemIdOrCode)->exists();","            return $item_id_exists;","        } else {","            $item_code_exists = $this->want_items()->where('code', $itemIdOrCode)->exists();","            return $item_code_exists;","        }","    }"],"id":3}],[{"start":{"row":77,"column":5},"end":{"row":78,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":78,"column":0},"end":{"row":78,"column":4},"action":"insert","lines":["    "]},{"start":{"row":78,"column":4},"end":{"row":79,"column":0},"action":"insert","lines":["",""]},{"start":{"row":79,"column":0},"end":{"row":79,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":79,"column":4},"end":{"row":122,"column":5},"action":"insert","lines":["public function have_items()","    {","        return $this->items()->where('type', 'have');","    }","","    public function have($itemId)","    {","        // Is the user already \"have\"?","        $exist = $this->is_haveing($itemId);","","        if ($exist) {","            // do nothing","            return false;","        } else {","            // do \"have\"","            $this->items()->attach($itemId, ['type' => 'have']);","            return true;","        }","    }","","    public function dont_have($itemId)","    {","        // Is the user already \"have\"?","        $exist = $this->is_haveing($itemId);","","        if ($exist) {","            // remove \"have\"","            \\DB::delete(\"DELETE FROM item_user WHERE user_id = ? AND item_id = ? AND type = 'have'\", [\\Auth::id(), $itemId]);","        } else {","            // do nothing","            return false;","        }","    }","","    public function is_haveing($itemIdOrCode)","    {","        if (is_numeric($itemIdOrCode)) {","            $item_id_exists = $this->have_items()->where('item_id', $itemIdOrCode)->exists();","            return $item_id_exists;","        } else {","            $item_code_exists = $this->have_items()->where('code', $itemIdOrCode)->exists();","            return $item_code_exists;","        }","    }"],"id":5}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":117,"column":35},"end":{"row":117,"column":35},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1530000902627,"hash":"6745adfef544708841e9801861b111ace8c0cd1f"}